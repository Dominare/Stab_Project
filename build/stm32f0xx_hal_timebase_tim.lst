ARM GAS  /tmp/cc2D2lzY.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_hal_timebase_tim.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.global	__aeabi_uidiv
  16              		.section	.text.HAL_InitTick,"ax",%progbits
  17              		.align	1
  18              		.global	HAL_InitTick
  19              		.arch armv6s-m
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  23              		.fpu softvfp
  25              	HAL_InitTick:
  26              	.LVL0:
  27              	.LFB40:
  28              		.file 1 "Core/Src/stm32f0xx_hal_timebase_tim.c"
   1:Core/Src/stm32f0xx_hal_timebase_tim.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32f0xx_hal_timebase_tim.c **** /**
   3:Core/Src/stm32f0xx_hal_timebase_tim.c ****   ******************************************************************************
   4:Core/Src/stm32f0xx_hal_timebase_tim.c ****   * @file    stm32f0xx_hal_timebase_TIM.c
   5:Core/Src/stm32f0xx_hal_timebase_tim.c ****   * @brief   HAL time base based on the hardware TIM.
   6:Core/Src/stm32f0xx_hal_timebase_tim.c ****   ******************************************************************************
   7:Core/Src/stm32f0xx_hal_timebase_tim.c ****   * @attention
   8:Core/Src/stm32f0xx_hal_timebase_tim.c ****   *
   9:Core/Src/stm32f0xx_hal_timebase_tim.c ****   * <h2><center>&copy; Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/stm32f0xx_hal_timebase_tim.c ****   * All rights reserved.</center></h2>
  11:Core/Src/stm32f0xx_hal_timebase_tim.c ****   *
  12:Core/Src/stm32f0xx_hal_timebase_tim.c ****   * This software component is licensed by ST under Ultimate Liberty license
  13:Core/Src/stm32f0xx_hal_timebase_tim.c ****   * SLA0044, the "License"; You may not use this file except in compliance with
  14:Core/Src/stm32f0xx_hal_timebase_tim.c ****   * the License. You may obtain a copy of the License at:
  15:Core/Src/stm32f0xx_hal_timebase_tim.c ****   *                             www.st.com/SLA0044
  16:Core/Src/stm32f0xx_hal_timebase_tim.c ****   *
  17:Core/Src/stm32f0xx_hal_timebase_tim.c ****   ******************************************************************************
  18:Core/Src/stm32f0xx_hal_timebase_tim.c ****   */
  19:Core/Src/stm32f0xx_hal_timebase_tim.c **** /* USER CODE END Header */
  20:Core/Src/stm32f0xx_hal_timebase_tim.c **** 
  21:Core/Src/stm32f0xx_hal_timebase_tim.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32f0xx_hal_timebase_tim.c **** #include "stm32f0xx_hal.h"
  23:Core/Src/stm32f0xx_hal_timebase_tim.c **** #include "stm32f0xx_hal_tim.h"
  24:Core/Src/stm32f0xx_hal_timebase_tim.c **** 
  25:Core/Src/stm32f0xx_hal_timebase_tim.c **** /* Private typedef -----------------------------------------------------------*/
  26:Core/Src/stm32f0xx_hal_timebase_tim.c **** /* Private define ------------------------------------------------------------*/
  27:Core/Src/stm32f0xx_hal_timebase_tim.c **** /* Private macro -------------------------------------------------------------*/
  28:Core/Src/stm32f0xx_hal_timebase_tim.c **** /* Private variables ---------------------------------------------------------*/
  29:Core/Src/stm32f0xx_hal_timebase_tim.c **** TIM_HandleTypeDef        htim1;
  30:Core/Src/stm32f0xx_hal_timebase_tim.c **** /* Private function prototypes -----------------------------------------------*/
ARM GAS  /tmp/cc2D2lzY.s 			page 2


  31:Core/Src/stm32f0xx_hal_timebase_tim.c **** /* Private functions ---------------------------------------------------------*/
  32:Core/Src/stm32f0xx_hal_timebase_tim.c **** 
  33:Core/Src/stm32f0xx_hal_timebase_tim.c **** /**
  34:Core/Src/stm32f0xx_hal_timebase_tim.c ****   * @brief  This function configures the TIM1 as a time base source.
  35:Core/Src/stm32f0xx_hal_timebase_tim.c ****   *         The time source is configured  to have 1ms time base with a dedicated
  36:Core/Src/stm32f0xx_hal_timebase_tim.c ****   *         Tick interrupt priority.
  37:Core/Src/stm32f0xx_hal_timebase_tim.c ****   * @note   This function is called  automatically at the beginning of program after
  38:Core/Src/stm32f0xx_hal_timebase_tim.c ****   *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  39:Core/Src/stm32f0xx_hal_timebase_tim.c ****   * @param  TickPriority: Tick interrupt priority.
  40:Core/Src/stm32f0xx_hal_timebase_tim.c ****   * @retval HAL status
  41:Core/Src/stm32f0xx_hal_timebase_tim.c ****   */
  42:Core/Src/stm32f0xx_hal_timebase_tim.c **** HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
  43:Core/Src/stm32f0xx_hal_timebase_tim.c **** {
  29              		.loc 1 43 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 24
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 43 1 is_stmt 0 view .LVU1
  34 0000 00B5     		push	{lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 14, -4
  38 0002 87B0     		sub	sp, sp, #28
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 32
  41 0004 0100     		movs	r1, r0
  44:Core/Src/stm32f0xx_hal_timebase_tim.c ****   RCC_ClkInitTypeDef    clkconfig;
  42              		.loc 1 44 3 is_stmt 1 view .LVU2
  45:Core/Src/stm32f0xx_hal_timebase_tim.c ****   uint32_t              uwTimclock = 0;
  43              		.loc 1 45 3 view .LVU3
  44              	.LVL1:
  46:Core/Src/stm32f0xx_hal_timebase_tim.c ****   uint32_t              uwPrescalerValue = 0;
  45              		.loc 1 46 3 view .LVU4
  47:Core/Src/stm32f0xx_hal_timebase_tim.c ****   uint32_t              pFLatency;
  46              		.loc 1 47 3 view .LVU5
  48:Core/Src/stm32f0xx_hal_timebase_tim.c ****   /*Configure the TIM1 IRQ priority */
  49:Core/Src/stm32f0xx_hal_timebase_tim.c ****   HAL_NVIC_SetPriority(TIM1_BRK_UP_TRG_COM_IRQn, TickPriority ,0);
  47              		.loc 1 49 3 view .LVU6
  48 0006 0022     		movs	r2, #0
  49 0008 0D20     		movs	r0, #13
  50              	.LVL2:
  51              		.loc 1 49 3 is_stmt 0 view .LVU7
  52 000a FFF7FEFF 		bl	HAL_NVIC_SetPriority
  53              	.LVL3:
  50:Core/Src/stm32f0xx_hal_timebase_tim.c **** 
  51:Core/Src/stm32f0xx_hal_timebase_tim.c ****   /* Enable the TIM1 global Interrupt */
  52:Core/Src/stm32f0xx_hal_timebase_tim.c ****   HAL_NVIC_EnableIRQ(TIM1_BRK_UP_TRG_COM_IRQn);
  54              		.loc 1 52 3 is_stmt 1 view .LVU8
  55 000e 0D20     		movs	r0, #13
  56 0010 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
  57              	.LVL4:
  53:Core/Src/stm32f0xx_hal_timebase_tim.c **** 
  54:Core/Src/stm32f0xx_hal_timebase_tim.c ****   /* Enable TIM1 clock */
  55:Core/Src/stm32f0xx_hal_timebase_tim.c ****   __HAL_RCC_TIM1_CLK_ENABLE();
  58              		.loc 1 55 3 view .LVU9
  59              	.LBB2:
  60              		.loc 1 55 3 view .LVU10
ARM GAS  /tmp/cc2D2lzY.s 			page 3


  61              		.loc 1 55 3 view .LVU11
  62 0014 134A     		ldr	r2, .L5
  63 0016 9169     		ldr	r1, [r2, #24]
  64 0018 8020     		movs	r0, #128
  65 001a 0001     		lsls	r0, r0, #4
  66 001c 0143     		orrs	r1, r0
  67 001e 9161     		str	r1, [r2, #24]
  68              		.loc 1 55 3 view .LVU12
  69 0020 9369     		ldr	r3, [r2, #24]
  70 0022 0340     		ands	r3, r0
  71 0024 0093     		str	r3, [sp]
  72              		.loc 1 55 3 view .LVU13
  73 0026 009B     		ldr	r3, [sp]
  74              	.LBE2:
  75              		.loc 1 55 3 view .LVU14
  56:Core/Src/stm32f0xx_hal_timebase_tim.c **** 
  57:Core/Src/stm32f0xx_hal_timebase_tim.c ****   /* Get clock configuration */
  58:Core/Src/stm32f0xx_hal_timebase_tim.c ****   HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
  76              		.loc 1 58 3 view .LVU15
  77 0028 01A9     		add	r1, sp, #4
  78 002a 02A8     		add	r0, sp, #8
  79 002c FFF7FEFF 		bl	HAL_RCC_GetClockConfig
  80              	.LVL5:
  59:Core/Src/stm32f0xx_hal_timebase_tim.c **** 
  60:Core/Src/stm32f0xx_hal_timebase_tim.c ****   /* Compute TIM1 clock */
  61:Core/Src/stm32f0xx_hal_timebase_tim.c ****   uwTimclock = HAL_RCC_GetPCLK1Freq();
  81              		.loc 1 61 3 view .LVU16
  82              		.loc 1 61 16 is_stmt 0 view .LVU17
  83 0030 FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
  84              	.LVL6:
  62:Core/Src/stm32f0xx_hal_timebase_tim.c ****   /* Compute the prescaler value to have TIM1 counter clock equal to 1MHz */
  63:Core/Src/stm32f0xx_hal_timebase_tim.c ****   uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
  85              		.loc 1 63 3 is_stmt 1 view .LVU18
  86              		.loc 1 63 46 is_stmt 0 view .LVU19
  87 0034 0C49     		ldr	r1, .L5+4
  88 0036 FFF7FEFF 		bl	__aeabi_uidiv
  89              	.LVL7:
  90              		.loc 1 63 20 view .LVU20
  91 003a 431E     		subs	r3, r0, #1
  92              	.LVL8:
  64:Core/Src/stm32f0xx_hal_timebase_tim.c **** 
  65:Core/Src/stm32f0xx_hal_timebase_tim.c ****   /* Initialize TIM1 */
  66:Core/Src/stm32f0xx_hal_timebase_tim.c ****   htim1.Instance = TIM1;
  93              		.loc 1 66 3 is_stmt 1 view .LVU21
  94              		.loc 1 66 18 is_stmt 0 view .LVU22
  95 003c 0B48     		ldr	r0, .L5+8
  96 003e 0C4A     		ldr	r2, .L5+12
  97 0040 0260     		str	r2, [r0]
  67:Core/Src/stm32f0xx_hal_timebase_tim.c **** 
  68:Core/Src/stm32f0xx_hal_timebase_tim.c ****   /* Initialize TIMx peripheral as follow:
  69:Core/Src/stm32f0xx_hal_timebase_tim.c ****   + Period = [(TIM1CLK/1000) - 1]. to have a (1/1000) s time base.
  70:Core/Src/stm32f0xx_hal_timebase_tim.c ****   + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  71:Core/Src/stm32f0xx_hal_timebase_tim.c ****   + ClockDivision = 0
  72:Core/Src/stm32f0xx_hal_timebase_tim.c ****   + Counter direction = Up
  73:Core/Src/stm32f0xx_hal_timebase_tim.c ****   */
  74:Core/Src/stm32f0xx_hal_timebase_tim.c ****   htim1.Init.Period = (1000000U / 1000U) - 1U;
  98              		.loc 1 74 3 is_stmt 1 view .LVU23
ARM GAS  /tmp/cc2D2lzY.s 			page 4


  99              		.loc 1 74 21 is_stmt 0 view .LVU24
 100 0042 0C4A     		ldr	r2, .L5+16
 101 0044 C260     		str	r2, [r0, #12]
  75:Core/Src/stm32f0xx_hal_timebase_tim.c ****   htim1.Init.Prescaler = uwPrescalerValue;
 102              		.loc 1 75 3 is_stmt 1 view .LVU25
 103              		.loc 1 75 24 is_stmt 0 view .LVU26
 104 0046 4360     		str	r3, [r0, #4]
  76:Core/Src/stm32f0xx_hal_timebase_tim.c ****   htim1.Init.ClockDivision = 0;
 105              		.loc 1 76 3 is_stmt 1 view .LVU27
 106              		.loc 1 76 28 is_stmt 0 view .LVU28
 107 0048 0023     		movs	r3, #0
 108              	.LVL9:
 109              		.loc 1 76 28 view .LVU29
 110 004a 0361     		str	r3, [r0, #16]
  77:Core/Src/stm32f0xx_hal_timebase_tim.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 111              		.loc 1 77 3 is_stmt 1 view .LVU30
 112              		.loc 1 77 26 is_stmt 0 view .LVU31
 113 004c 8360     		str	r3, [r0, #8]
  78:Core/Src/stm32f0xx_hal_timebase_tim.c **** 
  79:Core/Src/stm32f0xx_hal_timebase_tim.c ****   if(HAL_TIM_Base_Init(&htim1) == HAL_OK)
 114              		.loc 1 79 3 is_stmt 1 view .LVU32
 115              		.loc 1 79 6 is_stmt 0 view .LVU33
 116 004e FFF7FEFF 		bl	HAL_TIM_Base_Init
 117              	.LVL10:
 118              		.loc 1 79 5 view .LVU34
 119 0052 0028     		cmp	r0, #0
 120 0054 02D0     		beq	.L4
  80:Core/Src/stm32f0xx_hal_timebase_tim.c ****   {
  81:Core/Src/stm32f0xx_hal_timebase_tim.c ****     /* Start the TIM time Base generation in interrupt mode */
  82:Core/Src/stm32f0xx_hal_timebase_tim.c ****     return HAL_TIM_Base_Start_IT(&htim1);
  83:Core/Src/stm32f0xx_hal_timebase_tim.c ****   }
  84:Core/Src/stm32f0xx_hal_timebase_tim.c **** 
  85:Core/Src/stm32f0xx_hal_timebase_tim.c ****   /* Return function status */
  86:Core/Src/stm32f0xx_hal_timebase_tim.c ****   return HAL_ERROR;
 121              		.loc 1 86 10 view .LVU35
 122 0056 0120     		movs	r0, #1
 123              	.L2:
  87:Core/Src/stm32f0xx_hal_timebase_tim.c **** }
 124              		.loc 1 87 1 view .LVU36
 125 0058 07B0     		add	sp, sp, #28
 126              		@ sp needed
 127 005a 00BD     		pop	{pc}
 128              	.L4:
  82:Core/Src/stm32f0xx_hal_timebase_tim.c ****   }
 129              		.loc 1 82 5 is_stmt 1 view .LVU37
  82:Core/Src/stm32f0xx_hal_timebase_tim.c ****   }
 130              		.loc 1 82 12 is_stmt 0 view .LVU38
 131 005c 0348     		ldr	r0, .L5+8
 132 005e FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 133              	.LVL11:
 134 0062 F9E7     		b	.L2
 135              	.L6:
 136              		.align	2
 137              	.L5:
 138 0064 00100240 		.word	1073876992
 139 0068 40420F00 		.word	1000000
 140 006c 00000000 		.word	htim1
ARM GAS  /tmp/cc2D2lzY.s 			page 5


 141 0070 002C0140 		.word	1073818624
 142 0074 E7030000 		.word	999
 143              		.cfi_endproc
 144              	.LFE40:
 146              		.section	.text.HAL_SuspendTick,"ax",%progbits
 147              		.align	1
 148              		.global	HAL_SuspendTick
 149              		.syntax unified
 150              		.code	16
 151              		.thumb_func
 152              		.fpu softvfp
 154              	HAL_SuspendTick:
 155              	.LFB41:
  88:Core/Src/stm32f0xx_hal_timebase_tim.c **** 
  89:Core/Src/stm32f0xx_hal_timebase_tim.c **** /**
  90:Core/Src/stm32f0xx_hal_timebase_tim.c ****   * @brief  Suspend Tick increment.
  91:Core/Src/stm32f0xx_hal_timebase_tim.c ****   * @note   Disable the tick increment by disabling TIM1 update interrupt.
  92:Core/Src/stm32f0xx_hal_timebase_tim.c ****   * @param  None
  93:Core/Src/stm32f0xx_hal_timebase_tim.c ****   * @retval None
  94:Core/Src/stm32f0xx_hal_timebase_tim.c ****   */
  95:Core/Src/stm32f0xx_hal_timebase_tim.c **** void HAL_SuspendTick(void)
  96:Core/Src/stm32f0xx_hal_timebase_tim.c **** {
 156              		.loc 1 96 1 is_stmt 1 view -0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 0
 159              		@ frame_needed = 0, uses_anonymous_args = 0
 160              		@ link register save eliminated.
  97:Core/Src/stm32f0xx_hal_timebase_tim.c ****   /* Disable TIM1 update Interrupt */
  98:Core/Src/stm32f0xx_hal_timebase_tim.c ****   __HAL_TIM_DISABLE_IT(&htim1, TIM_IT_UPDATE);
 161              		.loc 1 98 3 view .LVU40
 162 0000 034B     		ldr	r3, .L8
 163 0002 1A68     		ldr	r2, [r3]
 164 0004 D368     		ldr	r3, [r2, #12]
 165 0006 0121     		movs	r1, #1
 166 0008 8B43     		bics	r3, r1
 167 000a D360     		str	r3, [r2, #12]
  99:Core/Src/stm32f0xx_hal_timebase_tim.c **** }
 168              		.loc 1 99 1 is_stmt 0 view .LVU41
 169              		@ sp needed
 170 000c 7047     		bx	lr
 171              	.L9:
 172 000e C046     		.align	2
 173              	.L8:
 174 0010 00000000 		.word	htim1
 175              		.cfi_endproc
 176              	.LFE41:
 178              		.section	.text.HAL_ResumeTick,"ax",%progbits
 179              		.align	1
 180              		.global	HAL_ResumeTick
 181              		.syntax unified
 182              		.code	16
 183              		.thumb_func
 184              		.fpu softvfp
 186              	HAL_ResumeTick:
 187              	.LFB42:
 100:Core/Src/stm32f0xx_hal_timebase_tim.c **** 
 101:Core/Src/stm32f0xx_hal_timebase_tim.c **** /**
ARM GAS  /tmp/cc2D2lzY.s 			page 6


 102:Core/Src/stm32f0xx_hal_timebase_tim.c ****   * @brief  Resume Tick increment.
 103:Core/Src/stm32f0xx_hal_timebase_tim.c ****   * @note   Enable the tick increment by Enabling TIM1 update interrupt.
 104:Core/Src/stm32f0xx_hal_timebase_tim.c ****   * @param  None
 105:Core/Src/stm32f0xx_hal_timebase_tim.c ****   * @retval None
 106:Core/Src/stm32f0xx_hal_timebase_tim.c ****   */
 107:Core/Src/stm32f0xx_hal_timebase_tim.c **** void HAL_ResumeTick(void)
 108:Core/Src/stm32f0xx_hal_timebase_tim.c **** {
 188              		.loc 1 108 1 is_stmt 1 view -0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192              		@ link register save eliminated.
 109:Core/Src/stm32f0xx_hal_timebase_tim.c ****   /* Enable TIM1 Update interrupt */
 110:Core/Src/stm32f0xx_hal_timebase_tim.c ****   __HAL_TIM_ENABLE_IT(&htim1, TIM_IT_UPDATE);
 193              		.loc 1 110 3 view .LVU43
 194 0000 034B     		ldr	r3, .L11
 195 0002 1A68     		ldr	r2, [r3]
 196 0004 D368     		ldr	r3, [r2, #12]
 197 0006 0121     		movs	r1, #1
 198 0008 0B43     		orrs	r3, r1
 199 000a D360     		str	r3, [r2, #12]
 111:Core/Src/stm32f0xx_hal_timebase_tim.c **** }
 200              		.loc 1 111 1 is_stmt 0 view .LVU44
 201              		@ sp needed
 202 000c 7047     		bx	lr
 203              	.L12:
 204 000e C046     		.align	2
 205              	.L11:
 206 0010 00000000 		.word	htim1
 207              		.cfi_endproc
 208              	.LFE42:
 210              		.comm	htim1,72,4
 211              		.text
 212              	.Letext0:
 213              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 214              		.file 3 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 215              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f030x6.h"
 216              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 217              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 218              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 219              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 220              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 221              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
ARM GAS  /tmp/cc2D2lzY.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_hal_timebase_tim.c
     /tmp/cc2D2lzY.s:17     .text.HAL_InitTick:0000000000000000 $t
     /tmp/cc2D2lzY.s:25     .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/cc2D2lzY.s:138    .text.HAL_InitTick:0000000000000064 $d
                            *COM*:0000000000000048 htim1
     /tmp/cc2D2lzY.s:147    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/cc2D2lzY.s:154    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/cc2D2lzY.s:174    .text.HAL_SuspendTick:0000000000000010 $d
     /tmp/cc2D2lzY.s:179    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/cc2D2lzY.s:186    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/cc2D2lzY.s:206    .text.HAL_ResumeTick:0000000000000010 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_RCC_GetClockConfig
HAL_RCC_GetPCLK1Freq
HAL_TIM_Base_Init
HAL_TIM_Base_Start_IT
