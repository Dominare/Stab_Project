ARM GAS  /tmp/ccvnvTGu.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"adc.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_ADC_Init,"ax",%progbits
  16              		.align	1
  17              		.global	MX_ADC_Init
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	MX_ADC_Init:
  25              	.LFB40:
  26              		.file 1 "Core/Src/adc.c"
   1:Core/Src/adc.c **** /**
   2:Core/Src/adc.c ****   ******************************************************************************
   3:Core/Src/adc.c ****   * @file    adc.c
   4:Core/Src/adc.c ****   * @brief   This file provides code for the configuration
   5:Core/Src/adc.c ****   *          of the ADC instances.
   6:Core/Src/adc.c ****   ******************************************************************************
   7:Core/Src/adc.c ****   * @attention
   8:Core/Src/adc.c ****   *
   9:Core/Src/adc.c ****   * <h2><center>&copy; Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/adc.c ****   * All rights reserved.</center></h2>
  11:Core/Src/adc.c ****   *
  12:Core/Src/adc.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/adc.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/adc.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/adc.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/adc.c ****   *
  17:Core/Src/adc.c ****   ******************************************************************************
  18:Core/Src/adc.c ****   */
  19:Core/Src/adc.c **** 
  20:Core/Src/adc.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/adc.c **** #include "adc.h"
  22:Core/Src/adc.c **** 
  23:Core/Src/adc.c **** /* USER CODE BEGIN 0 */
  24:Core/Src/adc.c **** 
  25:Core/Src/adc.c **** /* USER CODE END 0 */
  26:Core/Src/adc.c **** 
  27:Core/Src/adc.c **** ADC_HandleTypeDef hadc;
  28:Core/Src/adc.c **** 
  29:Core/Src/adc.c **** /* ADC init function */
  30:Core/Src/adc.c **** void MX_ADC_Init(void)
  31:Core/Src/adc.c **** {
  27              		.loc 1 31 1 view -0
ARM GAS  /tmp/ccvnvTGu.s 			page 2


  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 16
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 00B5     		push	{lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 14, -4
  35 0002 85B0     		sub	sp, sp, #20
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 24
  32:Core/Src/adc.c **** 
  33:Core/Src/adc.c ****   /* USER CODE BEGIN ADC_Init 0 */
  34:Core/Src/adc.c **** 
  35:Core/Src/adc.c ****   /* USER CODE END ADC_Init 0 */
  36:Core/Src/adc.c **** 
  37:Core/Src/adc.c ****   ADC_ChannelConfTypeDef sConfig = {0};
  38              		.loc 1 37 3 view .LVU1
  39              		.loc 1 37 26 is_stmt 0 view .LVU2
  40 0004 0C22     		movs	r2, #12
  41 0006 0021     		movs	r1, #0
  42 0008 01A8     		add	r0, sp, #4
  43 000a FFF7FEFF 		bl	memset
  44              	.LVL0:
  38:Core/Src/adc.c **** 
  39:Core/Src/adc.c ****   /* USER CODE BEGIN ADC_Init 1 */
  40:Core/Src/adc.c **** 
  41:Core/Src/adc.c ****   /* USER CODE END ADC_Init 1 */
  42:Core/Src/adc.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
  43:Core/Src/adc.c ****   */
  44:Core/Src/adc.c ****   hadc.Instance = ADC1;
  45              		.loc 1 44 3 is_stmt 1 view .LVU3
  46              		.loc 1 44 17 is_stmt 0 view .LVU4
  47 000e 1E48     		ldr	r0, .L8
  48 0010 1E4B     		ldr	r3, .L8+4
  49 0012 0360     		str	r3, [r0]
  45:Core/Src/adc.c ****   hadc.Init.ClockPrescaler = ADC_CLOCK_ASYNC_DIV1;
  50              		.loc 1 45 3 is_stmt 1 view .LVU5
  51              		.loc 1 45 28 is_stmt 0 view .LVU6
  52 0014 0023     		movs	r3, #0
  53 0016 4360     		str	r3, [r0, #4]
  46:Core/Src/adc.c ****   hadc.Init.Resolution = ADC_RESOLUTION_12B;
  54              		.loc 1 46 3 is_stmt 1 view .LVU7
  55              		.loc 1 46 24 is_stmt 0 view .LVU8
  56 0018 8360     		str	r3, [r0, #8]
  47:Core/Src/adc.c ****   hadc.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  57              		.loc 1 47 3 is_stmt 1 view .LVU9
  58              		.loc 1 47 23 is_stmt 0 view .LVU10
  59 001a C360     		str	r3, [r0, #12]
  48:Core/Src/adc.c ****   hadc.Init.ScanConvMode = ADC_SCAN_DIRECTION_FORWARD;
  60              		.loc 1 48 3 is_stmt 1 view .LVU11
  61              		.loc 1 48 26 is_stmt 0 view .LVU12
  62 001c 0122     		movs	r2, #1
  63 001e 0261     		str	r2, [r0, #16]
  49:Core/Src/adc.c ****   hadc.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
  64              		.loc 1 49 3 is_stmt 1 view .LVU13
  65              		.loc 1 49 26 is_stmt 0 view .LVU14
  66 0020 0421     		movs	r1, #4
ARM GAS  /tmp/ccvnvTGu.s 			page 3


  67 0022 4161     		str	r1, [r0, #20]
  50:Core/Src/adc.c ****   hadc.Init.LowPowerAutoWait = DISABLE;
  68              		.loc 1 50 3 is_stmt 1 view .LVU15
  69              		.loc 1 50 30 is_stmt 0 view .LVU16
  70 0024 0376     		strb	r3, [r0, #24]
  51:Core/Src/adc.c ****   hadc.Init.LowPowerAutoPowerOff = DISABLE;
  71              		.loc 1 51 3 is_stmt 1 view .LVU17
  72              		.loc 1 51 34 is_stmt 0 view .LVU18
  73 0026 4376     		strb	r3, [r0, #25]
  52:Core/Src/adc.c ****   hadc.Init.ContinuousConvMode = DISABLE;
  74              		.loc 1 52 3 is_stmt 1 view .LVU19
  75              		.loc 1 52 32 is_stmt 0 view .LVU20
  76 0028 8376     		strb	r3, [r0, #26]
  53:Core/Src/adc.c ****   hadc.Init.DiscontinuousConvMode = DISABLE;
  77              		.loc 1 53 3 is_stmt 1 view .LVU21
  78              		.loc 1 53 35 is_stmt 0 view .LVU22
  79 002a C376     		strb	r3, [r0, #27]
  54:Core/Src/adc.c ****   hadc.Init.ExternalTrigConv = ADC_SOFTWARE_START;
  80              		.loc 1 54 3 is_stmt 1 view .LVU23
  81              		.loc 1 54 30 is_stmt 0 view .LVU24
  82 002c C221     		movs	r1, #194
  83 002e FF31     		adds	r1, r1, #255
  84 0030 C161     		str	r1, [r0, #28]
  55:Core/Src/adc.c ****   hadc.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
  85              		.loc 1 55 3 is_stmt 1 view .LVU25
  86              		.loc 1 55 34 is_stmt 0 view .LVU26
  87 0032 0362     		str	r3, [r0, #32]
  56:Core/Src/adc.c ****   hadc.Init.DMAContinuousRequests = DISABLE;
  88              		.loc 1 56 3 is_stmt 1 view .LVU27
  89              		.loc 1 56 35 is_stmt 0 view .LVU28
  90 0034 9E39     		subs	r1, r1, #158
  91 0036 FF39     		subs	r1, r1, #255
  92 0038 4354     		strb	r3, [r0, r1]
  57:Core/Src/adc.c ****   hadc.Init.Overrun = ADC_OVR_DATA_PRESERVED;
  93              		.loc 1 57 3 is_stmt 1 view .LVU29
  94              		.loc 1 57 21 is_stmt 0 view .LVU30
  95 003a 8262     		str	r2, [r0, #40]
  58:Core/Src/adc.c ****   if (HAL_ADC_Init(&hadc) != HAL_OK)
  96              		.loc 1 58 3 is_stmt 1 view .LVU31
  97              		.loc 1 58 7 is_stmt 0 view .LVU32
  98 003c FFF7FEFF 		bl	HAL_ADC_Init
  99              	.LVL1:
 100              		.loc 1 58 6 view .LVU33
 101 0040 0028     		cmp	r0, #0
 102 0042 17D1     		bne	.L5
 103              	.L2:
  59:Core/Src/adc.c ****   {
  60:Core/Src/adc.c ****     Error_Handler();
  61:Core/Src/adc.c ****   }
  62:Core/Src/adc.c ****   /** Configure for the selected ADC regular channel to be converted.
  63:Core/Src/adc.c ****   */
  64:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_0;
 104              		.loc 1 64 3 is_stmt 1 view .LVU34
 105              		.loc 1 64 19 is_stmt 0 view .LVU35
 106 0044 0023     		movs	r3, #0
 107 0046 0193     		str	r3, [sp, #4]
  65:Core/Src/adc.c ****   sConfig.Rank = ADC_RANK_CHANNEL_NUMBER;
ARM GAS  /tmp/ccvnvTGu.s 			page 4


 108              		.loc 1 65 3 is_stmt 1 view .LVU36
 109              		.loc 1 65 16 is_stmt 0 view .LVU37
 110 0048 8023     		movs	r3, #128
 111 004a 5B01     		lsls	r3, r3, #5
 112 004c 0293     		str	r3, [sp, #8]
  66:Core/Src/adc.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 113              		.loc 1 66 3 is_stmt 1 view .LVU38
 114              		.loc 1 66 24 is_stmt 0 view .LVU39
 115 004e 8023     		movs	r3, #128
 116 0050 5B05     		lsls	r3, r3, #21
 117 0052 0393     		str	r3, [sp, #12]
  67:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 118              		.loc 1 67 3 is_stmt 1 view .LVU40
 119              		.loc 1 67 7 is_stmt 0 view .LVU41
 120 0054 01A9     		add	r1, sp, #4
 121 0056 0C48     		ldr	r0, .L8
 122 0058 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 123              	.LVL2:
 124              		.loc 1 67 6 view .LVU42
 125 005c 0028     		cmp	r0, #0
 126 005e 0CD1     		bne	.L6
 127              	.L3:
  68:Core/Src/adc.c ****   {
  69:Core/Src/adc.c ****     Error_Handler();
  70:Core/Src/adc.c ****   }
  71:Core/Src/adc.c ****   /** Configure for the selected ADC regular channel to be converted.
  72:Core/Src/adc.c ****   */
  73:Core/Src/adc.c ****   sConfig.Channel = ADC_CHANNEL_1;
 128              		.loc 1 73 3 is_stmt 1 view .LVU43
 129              		.loc 1 73 19 is_stmt 0 view .LVU44
 130 0060 0123     		movs	r3, #1
 131 0062 0193     		str	r3, [sp, #4]
  74:Core/Src/adc.c ****   if (HAL_ADC_ConfigChannel(&hadc, &sConfig) != HAL_OK)
 132              		.loc 1 74 3 is_stmt 1 view .LVU45
 133              		.loc 1 74 7 is_stmt 0 view .LVU46
 134 0064 01A9     		add	r1, sp, #4
 135 0066 0848     		ldr	r0, .L8
 136 0068 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 137              	.LVL3:
 138              		.loc 1 74 6 view .LVU47
 139 006c 0028     		cmp	r0, #0
 140 006e 07D1     		bne	.L7
 141              	.L1:
  75:Core/Src/adc.c ****   {
  76:Core/Src/adc.c ****     Error_Handler();
  77:Core/Src/adc.c ****   }
  78:Core/Src/adc.c ****   /* USER CODE BEGIN ADC_Init 2 */
  79:Core/Src/adc.c **** 
  80:Core/Src/adc.c ****   /* USER CODE END ADC_Init 2 */
  81:Core/Src/adc.c **** 
  82:Core/Src/adc.c **** }
 142              		.loc 1 82 1 view .LVU48
 143 0070 05B0     		add	sp, sp, #20
 144              		@ sp needed
 145 0072 00BD     		pop	{pc}
 146              	.L5:
  60:Core/Src/adc.c ****   }
ARM GAS  /tmp/ccvnvTGu.s 			page 5


 147              		.loc 1 60 5 is_stmt 1 view .LVU49
 148 0074 FFF7FEFF 		bl	Error_Handler
 149              	.LVL4:
 150 0078 E4E7     		b	.L2
 151              	.L6:
  69:Core/Src/adc.c ****   }
 152              		.loc 1 69 5 view .LVU50
 153 007a FFF7FEFF 		bl	Error_Handler
 154              	.LVL5:
 155 007e EFE7     		b	.L3
 156              	.L7:
  76:Core/Src/adc.c ****   }
 157              		.loc 1 76 5 view .LVU51
 158 0080 FFF7FEFF 		bl	Error_Handler
 159              	.LVL6:
 160              		.loc 1 82 1 is_stmt 0 view .LVU52
 161 0084 F4E7     		b	.L1
 162              	.L9:
 163 0086 C046     		.align	2
 164              	.L8:
 165 0088 00000000 		.word	hadc
 166 008c 00240140 		.word	1073816576
 167              		.cfi_endproc
 168              	.LFE40:
 170              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 171              		.align	1
 172              		.global	HAL_ADC_MspInit
 173              		.syntax unified
 174              		.code	16
 175              		.thumb_func
 176              		.fpu softvfp
 178              	HAL_ADC_MspInit:
 179              	.LVL7:
 180              	.LFB41:
  83:Core/Src/adc.c **** 
  84:Core/Src/adc.c **** void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
  85:Core/Src/adc.c **** {
 181              		.loc 1 85 1 is_stmt 1 view -0
 182              		.cfi_startproc
 183              		@ args = 0, pretend = 0, frame = 32
 184              		@ frame_needed = 0, uses_anonymous_args = 0
 185              		.loc 1 85 1 is_stmt 0 view .LVU54
 186 0000 10B5     		push	{r4, lr}
 187              	.LCFI2:
 188              		.cfi_def_cfa_offset 8
 189              		.cfi_offset 4, -8
 190              		.cfi_offset 14, -4
 191 0002 88B0     		sub	sp, sp, #32
 192              	.LCFI3:
 193              		.cfi_def_cfa_offset 40
 194 0004 0400     		movs	r4, r0
  86:Core/Src/adc.c **** 
  87:Core/Src/adc.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 195              		.loc 1 87 3 is_stmt 1 view .LVU55
 196              		.loc 1 87 20 is_stmt 0 view .LVU56
 197 0006 1422     		movs	r2, #20
 198 0008 0021     		movs	r1, #0
ARM GAS  /tmp/ccvnvTGu.s 			page 6


 199 000a 03A8     		add	r0, sp, #12
 200              	.LVL8:
 201              		.loc 1 87 20 view .LVU57
 202 000c FFF7FEFF 		bl	memset
 203              	.LVL9:
  88:Core/Src/adc.c ****   if(adcHandle->Instance==ADC1)
 204              		.loc 1 88 3 is_stmt 1 view .LVU58
 205              		.loc 1 88 15 is_stmt 0 view .LVU59
 206 0010 2268     		ldr	r2, [r4]
 207              		.loc 1 88 5 view .LVU60
 208 0012 124B     		ldr	r3, .L13
 209 0014 9A42     		cmp	r2, r3
 210 0016 01D0     		beq	.L12
 211              	.L10:
  89:Core/Src/adc.c ****   {
  90:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 0 */
  91:Core/Src/adc.c **** 
  92:Core/Src/adc.c ****   /* USER CODE END ADC1_MspInit 0 */
  93:Core/Src/adc.c ****     /* ADC1 clock enable */
  94:Core/Src/adc.c ****     __HAL_RCC_ADC1_CLK_ENABLE();
  95:Core/Src/adc.c **** 
  96:Core/Src/adc.c ****     __HAL_RCC_GPIOA_CLK_ENABLE();
  97:Core/Src/adc.c ****     /**ADC GPIO Configuration
  98:Core/Src/adc.c ****     PA0     ------> ADC_IN0
  99:Core/Src/adc.c ****     PA1     ------> ADC_IN1
 100:Core/Src/adc.c ****     */
 101:Core/Src/adc.c ****     GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 102:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 103:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 104:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 105:Core/Src/adc.c **** 
 106:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 107:Core/Src/adc.c **** 
 108:Core/Src/adc.c ****   /* USER CODE END ADC1_MspInit 1 */
 109:Core/Src/adc.c ****   }
 110:Core/Src/adc.c **** }
 212              		.loc 1 110 1 view .LVU61
 213 0018 08B0     		add	sp, sp, #32
 214              		@ sp needed
 215              	.LVL10:
 216              		.loc 1 110 1 view .LVU62
 217 001a 10BD     		pop	{r4, pc}
 218              	.LVL11:
 219              	.L12:
  94:Core/Src/adc.c **** 
 220              		.loc 1 94 5 is_stmt 1 view .LVU63
 221              	.LBB2:
  94:Core/Src/adc.c **** 
 222              		.loc 1 94 5 view .LVU64
  94:Core/Src/adc.c **** 
 223              		.loc 1 94 5 view .LVU65
 224 001c 104B     		ldr	r3, .L13+4
 225 001e 9969     		ldr	r1, [r3, #24]
 226 0020 8020     		movs	r0, #128
 227 0022 8000     		lsls	r0, r0, #2
 228 0024 0143     		orrs	r1, r0
 229 0026 9961     		str	r1, [r3, #24]
ARM GAS  /tmp/ccvnvTGu.s 			page 7


  94:Core/Src/adc.c **** 
 230              		.loc 1 94 5 view .LVU66
 231 0028 9A69     		ldr	r2, [r3, #24]
 232 002a 0240     		ands	r2, r0
 233 002c 0192     		str	r2, [sp, #4]
  94:Core/Src/adc.c **** 
 234              		.loc 1 94 5 view .LVU67
 235 002e 019A     		ldr	r2, [sp, #4]
 236              	.LBE2:
  94:Core/Src/adc.c **** 
 237              		.loc 1 94 5 view .LVU68
  96:Core/Src/adc.c ****     /**ADC GPIO Configuration
 238              		.loc 1 96 5 view .LVU69
 239              	.LBB3:
  96:Core/Src/adc.c ****     /**ADC GPIO Configuration
 240              		.loc 1 96 5 view .LVU70
  96:Core/Src/adc.c ****     /**ADC GPIO Configuration
 241              		.loc 1 96 5 view .LVU71
 242 0030 5A69     		ldr	r2, [r3, #20]
 243 0032 8021     		movs	r1, #128
 244 0034 8902     		lsls	r1, r1, #10
 245 0036 0A43     		orrs	r2, r1
 246 0038 5A61     		str	r2, [r3, #20]
  96:Core/Src/adc.c ****     /**ADC GPIO Configuration
 247              		.loc 1 96 5 view .LVU72
 248 003a 5B69     		ldr	r3, [r3, #20]
 249 003c 0B40     		ands	r3, r1
 250 003e 0293     		str	r3, [sp, #8]
  96:Core/Src/adc.c ****     /**ADC GPIO Configuration
 251              		.loc 1 96 5 view .LVU73
 252 0040 029B     		ldr	r3, [sp, #8]
 253              	.LBE3:
  96:Core/Src/adc.c ****     /**ADC GPIO Configuration
 254              		.loc 1 96 5 view .LVU74
 101:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 255              		.loc 1 101 5 view .LVU75
 101:Core/Src/adc.c ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 256              		.loc 1 101 25 is_stmt 0 view .LVU76
 257 0042 0323     		movs	r3, #3
 258 0044 0393     		str	r3, [sp, #12]
 102:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 259              		.loc 1 102 5 is_stmt 1 view .LVU77
 102:Core/Src/adc.c ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 260              		.loc 1 102 26 is_stmt 0 view .LVU78
 261 0046 0493     		str	r3, [sp, #16]
 103:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 262              		.loc 1 103 5 is_stmt 1 view .LVU79
 103:Core/Src/adc.c ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 263              		.loc 1 103 26 is_stmt 0 view .LVU80
 264 0048 0023     		movs	r3, #0
 265 004a 0593     		str	r3, [sp, #20]
 104:Core/Src/adc.c **** 
 266              		.loc 1 104 5 is_stmt 1 view .LVU81
 267 004c 7138     		subs	r0, r0, #113
 268 004e FF38     		subs	r0, r0, #255
 269 0050 03A9     		add	r1, sp, #12
 270 0052 C005     		lsls	r0, r0, #23
ARM GAS  /tmp/ccvnvTGu.s 			page 8


 271 0054 FFF7FEFF 		bl	HAL_GPIO_Init
 272              	.LVL12:
 273              		.loc 1 110 1 is_stmt 0 view .LVU82
 274 0058 DEE7     		b	.L10
 275              	.L14:
 276 005a C046     		.align	2
 277              	.L13:
 278 005c 00240140 		.word	1073816576
 279 0060 00100240 		.word	1073876992
 280              		.cfi_endproc
 281              	.LFE41:
 283              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 284              		.align	1
 285              		.global	HAL_ADC_MspDeInit
 286              		.syntax unified
 287              		.code	16
 288              		.thumb_func
 289              		.fpu softvfp
 291              	HAL_ADC_MspDeInit:
 292              	.LVL13:
 293              	.LFB42:
 111:Core/Src/adc.c **** 
 112:Core/Src/adc.c **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)
 113:Core/Src/adc.c **** {
 294              		.loc 1 113 1 is_stmt 1 view -0
 295              		.cfi_startproc
 296              		@ args = 0, pretend = 0, frame = 0
 297              		@ frame_needed = 0, uses_anonymous_args = 0
 298              		.loc 1 113 1 is_stmt 0 view .LVU84
 299 0000 10B5     		push	{r4, lr}
 300              	.LCFI4:
 301              		.cfi_def_cfa_offset 8
 302              		.cfi_offset 4, -8
 303              		.cfi_offset 14, -4
 114:Core/Src/adc.c **** 
 115:Core/Src/adc.c ****   if(adcHandle->Instance==ADC1)
 304              		.loc 1 115 3 is_stmt 1 view .LVU85
 305              		.loc 1 115 15 is_stmt 0 view .LVU86
 306 0002 0268     		ldr	r2, [r0]
 307              		.loc 1 115 5 view .LVU87
 308 0004 074B     		ldr	r3, .L18
 309 0006 9A42     		cmp	r2, r3
 310 0008 00D0     		beq	.L17
 311              	.LVL14:
 312              	.L15:
 116:Core/Src/adc.c ****   {
 117:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 118:Core/Src/adc.c **** 
 119:Core/Src/adc.c ****   /* USER CODE END ADC1_MspDeInit 0 */
 120:Core/Src/adc.c ****     /* Peripheral clock disable */
 121:Core/Src/adc.c ****     __HAL_RCC_ADC1_CLK_DISABLE();
 122:Core/Src/adc.c **** 
 123:Core/Src/adc.c ****     /**ADC GPIO Configuration
 124:Core/Src/adc.c ****     PA0     ------> ADC_IN0
 125:Core/Src/adc.c ****     PA1     ------> ADC_IN1
 126:Core/Src/adc.c ****     */
 127:Core/Src/adc.c ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_0|GPIO_PIN_1);
ARM GAS  /tmp/ccvnvTGu.s 			page 9


 128:Core/Src/adc.c **** 
 129:Core/Src/adc.c ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 130:Core/Src/adc.c **** 
 131:Core/Src/adc.c ****   /* USER CODE END ADC1_MspDeInit 1 */
 132:Core/Src/adc.c ****   }
 133:Core/Src/adc.c **** }
 313              		.loc 1 133 1 view .LVU88
 314              		@ sp needed
 315 000a 10BD     		pop	{r4, pc}
 316              	.LVL15:
 317              	.L17:
 121:Core/Src/adc.c **** 
 318              		.loc 1 121 5 is_stmt 1 view .LVU89
 319 000c 064A     		ldr	r2, .L18+4
 320 000e 9369     		ldr	r3, [r2, #24]
 321 0010 0649     		ldr	r1, .L18+8
 322 0012 0B40     		ands	r3, r1
 323 0014 9361     		str	r3, [r2, #24]
 127:Core/Src/adc.c **** 
 324              		.loc 1 127 5 view .LVU90
 325 0016 9020     		movs	r0, #144
 326              	.LVL16:
 127:Core/Src/adc.c **** 
 327              		.loc 1 127 5 is_stmt 0 view .LVU91
 328 0018 0321     		movs	r1, #3
 329 001a C005     		lsls	r0, r0, #23
 330 001c FFF7FEFF 		bl	HAL_GPIO_DeInit
 331              	.LVL17:
 332              		.loc 1 133 1 view .LVU92
 333 0020 F3E7     		b	.L15
 334              	.L19:
 335 0022 C046     		.align	2
 336              	.L18:
 337 0024 00240140 		.word	1073816576
 338 0028 00100240 		.word	1073876992
 339 002c FFFDFFFF 		.word	-513
 340              		.cfi_endproc
 341              	.LFE42:
 343              		.comm	hadc,64,4
 344              		.text
 345              	.Letext0:
 346              		.file 2 "/usr/lib/gcc/arm-none-eabi/9.2.1/include/stdint.h"
 347              		.file 3 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 348              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f030x6.h"
 349              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f0xx.h"
 350              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 351              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 352              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 353              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_adc.h"
 354              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 355              		.file 11 "Core/Inc/adc.h"
 356              		.file 12 "Core/Inc/main.h"
 357              		.file 13 "<built-in>"
ARM GAS  /tmp/ccvnvTGu.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 adc.c
     /tmp/ccvnvTGu.s:16     .text.MX_ADC_Init:0000000000000000 $t
     /tmp/ccvnvTGu.s:24     .text.MX_ADC_Init:0000000000000000 MX_ADC_Init
     /tmp/ccvnvTGu.s:165    .text.MX_ADC_Init:0000000000000088 $d
                            *COM*:0000000000000040 hadc
     /tmp/ccvnvTGu.s:171    .text.HAL_ADC_MspInit:0000000000000000 $t
     /tmp/ccvnvTGu.s:178    .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
     /tmp/ccvnvTGu.s:278    .text.HAL_ADC_MspInit:000000000000005c $d
     /tmp/ccvnvTGu.s:284    .text.HAL_ADC_MspDeInit:0000000000000000 $t
     /tmp/ccvnvTGu.s:291    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
     /tmp/ccvnvTGu.s:337    .text.HAL_ADC_MspDeInit:0000000000000024 $d

UNDEFINED SYMBOLS
memset
HAL_ADC_Init
HAL_ADC_ConfigChannel
Error_Handler
HAL_GPIO_Init
HAL_GPIO_DeInit
